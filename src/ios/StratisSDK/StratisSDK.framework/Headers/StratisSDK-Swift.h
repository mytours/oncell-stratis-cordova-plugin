// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef STRATISSDK_SWIFT_H
#define STRATISSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="StratisSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// The base class for all Locks that are returned by StratisSDK.
SWIFT_CLASS("_TtC10StratisSDK11StratisLock")
@interface StratisLock : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// An instance of StratisLock that uses BLE to perform its unlock sequence.
/// BLE Locks must be discovered before they are activated.
SWIFT_CLASS("_TtC10StratisSDK7BLELock")
@interface BLELock : StratisLock
@end


/// Represents a Brivo Online lock which is activated over the internet.
SWIFT_CLASS("_TtC10StratisSDK15BrivoOnlineLock")
@interface BrivoOnlineLock : StratisLock
@end



/// Represents a Chirp lock which is activated over the internet and ranged via BLE beacons.
SWIFT_CLASS("_TtC10StratisSDK9ChirpLock")
@interface ChirpLock : BLELock
@end

enum ServerEnvironment : NSInteger;
@class NSString;
@class NSNumber;

/// The configuration object for instantiating the SDK.
SWIFT_CLASS("_TtC10StratisSDK13Configuration")
@interface Configuration : NSObject
- (nonnull instancetype)initWithServerEnvironment:(enum ServerEnvironment)serverEnvironment accessToken:(NSString * _Nonnull)accessToken propertyID:(NSString * _Nonnull)propertyID remoteLoggingEnabled:(BOOL)remoteLoggingEnabled loggingMetadata:(NSDictionary<NSString *, NSString *> * _Nonnull)loggingMetadata OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Represents BLE Locks using the Engage technology.
SWIFT_CLASS("_TtC10StratisSDK10EngageLock")
@interface EngageLock : BLELock
@end


/// This delegate provides results in response to mobile credential registration and BLE events
SWIFT_PROTOCOL("_TtP10StratisSDK17MobileKeyDelegate_")
@protocol MobileKeyDelegate
/// Called when device is registered at credential issuance api
- (void)mobileKeyServiceGenerated;
/// Called when credential is fetched and stored on device
- (void)mobileKeyServiceRetrieved;
/// Called when credential is provisioned at Chirp
- (void)mobileKeyServiceProvisioned;
/// Called when error happen during register or refresh
- (void)mobileKeyServiceError:(NSString * _Nonnull)error;
/// Called when service is actively running
- (void)running:(NSString * _Nonnull)message;
/// Called when service has stopped
- (void)stopped:(NSString * _Nonnull)message;
/// Called when service is connecting to the reader
- (void)inprogress:(NSString * _Nonnull)message;
/// Called when service successfully connected to the reader
- (void)complete:(NSString * _Nonnull)message;
/// Called when there is error connecting to reader
- (void)error:(NSString * _Nonnull)message;
/// Called when service finds long range reader nearby. This is currently not used
- (void)longRange:(BOOL)nearby;
/// Called when service finds nearby readers
- (void)nearbyReaders:(NSArray<NSString *> * _Nonnull)rIdentifiers;
@end


/// The different server environment STRATIS has
typedef SWIFT_ENUM(NSInteger, ServerEnvironment, open) {
/// Local Development
  ServerEnvironmentLOCAL = 0,
/// STRATIS internal development
  ServerEnvironmentDEV = 1,
/// External testing with beta features available
  ServerEnvironmentSANDBOX = 2,
/// STRATIS internal testing
  ServerEnvironmentTEST = 3,
/// Available services for customers with most stability
  ServerEnvironmentPROD = 4,
};

@class StratisSDK;
@class StratisError;

/// This delegate provides results in response to calling <code>fetchAccessibleDevices</code>.
SWIFT_PROTOCOL("_TtP10StratisSDK27StratisDeviceAccessDelegate_")
@protocol StratisDeviceAccessDelegate
/// Called when the fetch request has completed.
/// \param stratisSDK The instance of <code>StratisSDK</code> that has produced the result.
///
/// \param devices A list of <code>StratisLock</code> that has been fetched.
///
/// \param error An optional error if the fetch has failed for some reason.
///
- (void)stratisDeviceAccessRequestCompleted:(StratisSDK * _Nonnull)stratisSDK devices:(NSArray<StratisLock *> * _Nonnull)devices error:(StratisError * _Nullable)error;
@end

enum ActivationEvent : NSInteger;

/// This delegate posts events related to the device activation process
/// which is initiated by calling <code>activate</code> on an instance of <code>StratisLock</code>.
SWIFT_PROTOCOL("_TtP10StratisSDK31StratisDeviceActivationDelegate_")
@protocol StratisDeviceActivationDelegate
/// Will be called when notable parts of the activation process have occured.
/// \param event The event being reported.
///
/// \param device The instance of <code>StratisLock</code> that is reporting the event.
///
/// \param error An optional <code>StratisError</code> which is only provided when there was an error related to the event.
///
- (void)stratisDeviceActivationDidPostEvent:(enum ActivationEvent)event forDevice:(StratisLock * _Nonnull)device withError:(StratisError * _Nullable)error;
@end


/// This delegate provides results for device discovery which was initiated by calling <code>discoverActionableDevices</code>.
SWIFT_PROTOCOL("_TtP10StratisSDK30StratisDeviceDiscoveryDelegate_")
@protocol StratisDeviceDiscoveryDelegate
/// Called when a device is discovered.
/// \param stratisSDK A reference to the instance of the <code>StratisSDK</code> that produced this result.
///
/// \param devices A collection of <code>StratisLock</code>s that have been discovered.
///
- (void)stratisDiscoveredDevices:(StratisSDK * _Nonnull)stratisSDK devices:(NSArray<StratisLock *> * _Nonnull)devices;
/// Called when the device discovery has encountered an error.
/// \param stratisSDK A reference to the instance of the <code>StratisSDK</code> that produced this result.
///
/// \param error A <code>StratisError</code> instance.
///
- (void)stratisDiscoveryEncounteredError:(StratisSDK * _Nonnull)stratisSDK error:(StratisError * _Nonnull)error;
/// Called when the one or more BLE devices have updated the RSSI.
/// \param stratisSDK A reference to the instance of the <code>StratisSDK</code> that produced this result.
///
/// \param devices A collection of <code>StratisLock</code>s that have been updated.
///
- (void)stratisDiscoveryUpdatedRSSI:(StratisSDK * _Nonnull)stratisSDK devices:(NSArray<StratisLock *> * _Nonnull)devices;
/// Called when the one or more BLE devices have gone out of range
/// \param stratisSDK A reference to the instance of the <code>StratisSDK</code> that produced this result.
///
/// \param devices A collection of <code>StratisLock</code>s that have gone out of range.
///
- (void)stratisDiscoveryDevicesOutOfRange:(StratisSDK * _Nonnull)stratisSDK devices:(NSArray<StratisLock *> * _Nonnull)devices;
/// Called when the device discovery has completed.
/// \param stratisSDK A reference to the instance of the <code>StratisSDK</code> that produced this result.
///
- (void)stratisDiscoveryCompleted:(StratisSDK * _Nonnull)stratisSDK SWIFT_DEPRECATED_MSG("\n          This will be removed in a future release.\n          Please call stopDiscovery instead of waiting for a timeout.\n        ");
@end


/// Generalized errors that are emitted by the SDK.
SWIFT_CLASS("_TtC10StratisSDK12StratisError")
@interface StratisError : NSObject
/// A string for developer use during debugging.
@property (nonatomic, readonly, copy) NSString * _Nullable debugMessage;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface StratisLock (SWIFT_EXTENSION(StratisSDK))
@end

typedef SWIFT_ENUM(NSInteger, ActivationEvent, open) {
  ActivationEventActivationStarted = 0,
  ActivationEventPresentDeviceToLock = 1,
  ActivationEventActivationComplete = 2,
  ActivationEventDeactivationComplete = 3,
};


SWIFT_CLASS("_TtC10StratisSDK10StratisSDK")
@interface StratisSDK : NSObject
/// Instantiates an instance of the SDK with a specified configuration.
/// \param configuration A Configuration struct that defines behavior of the SDK.
///
- (nonnull instancetype)initWithConfiguration:(Configuration * _Nonnull)configuration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end






#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
